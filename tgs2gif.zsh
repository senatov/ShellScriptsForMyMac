#!/bin/zsh

set -euo pipefail

if [[ $# -eq 0 ]]; then
  echo "Usage: $0 input.tgs"
  exit 1
fi

input="$1"

if [[ "${input:e}" != "tgs" ]]; then
  echo "‚ùå Input must be a .tgs file"
  exit 2
fi

if [[ ! -f "$input" ]]; then
  echo "‚ùå File not found: $input"
  exit 3
fi

timestamp=$(date "+%Y%m%d_%H%M%S")
basename="${input:t:r}"
tmpdir="/tmp/tgs2gif_${timestamp}"
mkdir -p "$tmpdir"

echo "üîß Decompressing $input to animation.json..."
zstd -d < "$input" > "$tmpdir/animation.json" || { echo "‚ùå Failed to decompress .tgs"; exit 4; }

echo "üé¨ Rendering MP4 with lottie_convert.py..."
lottie_convert.py "$tmpdir/animation.json" "$tmpdir/output.mp4" --output-format video --fps 30 || { echo "‚ùå lottie_convert failed"; exit 5; }

if [[ ! -f "$tmpdir/output.mp4" ]]; then
  echo "‚ùå MP4 was not created"
  exit 6
fi

outgif="${input:h}/${basename}_${timestamp}.gif"

echo "üéû Converting MP4 to GIF with ffmpeg..."
ffmpeg -hide_banner -loglevel error -y -i "$tmpdir/output.mp4" -vf "scale=512:-1:flags=lanczos" "$outgif" || { echo "‚ùå ffmpeg failed"; exit 7; }

echo "üóë Moving original .tgs to Trash..."
mv "$input" ~/.Trash/

echo "‚úÖ Done: $outgif"

# –ü—É—Ç—å –∫ —Ç–µ–∫—É—â–µ–º—É —Å–∫—Ä–∏–ø—Ç—É
SCRIPT_NAME="$(basename "$0")"

# –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏–º –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
setopt no_hist_save

# –£–¥–∞–ª–∏–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –∏–º—è —Å–∫—Ä–∏–ø—Ç–∞, –∏–∑ zsh_history
sed -i '' "/$SCRIPT_NAME/d" ~/.zsh_history

# –°–±—Ä–æ—Å–∏–º —Ç–µ–∫—É—â—É—é –∏—Å—Ç–æ—Ä–∏—é
fc -p

# –ü–µ—Ä–µ—á–∏—Ç–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é (—á—Ç–æ–±—ã –æ—á–∏—Å—Ç–∏—Ç—å –µ—ë –∏–∑ –ø–∞–º—è—Ç–∏)
fc -R